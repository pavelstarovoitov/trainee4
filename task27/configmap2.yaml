apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  nginx.conf: |
    user root;
    worker_processes auto;
    pid /run/nginx.pid;
    error_log /var/log/nginx/error.log;
    include /etc/nginx/modules-enabled/*.conf;
    load_module modules/ngx_http_image_filter_module.so;
    events {
      worker_connections 768;
      # multi_accept on;
    }

    http {
      log_format custom '$remote_addr - $remote_user [$time_local] '
                              '"$request" $status $body_bytes_sent '
                              '"$http_referer" '
                              'proxy_pass: $upstream_addr';

            access_log /var/log/nginx/access.log custom;

      upstream backend {
                        server www.trainee4.com:32081;
                        server trainee4.com:32082;
      }
      server {
        listen 80;
        server_name trainee4.com;
        return 301 https://$host$request_uri;
      }
      server {
        listen  443 ssl;
        server_name  trainee4.com;
        ssl_certificate /etc/letsencrypt/live/trainee4.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/trainee4.com/privkey.pem;

        location /healthz {
          return 200;
        }

        location / {
          root /var/www/html;
          autoindex on;
          try_files $uri $uri/ =404;
          #root /usr/share/nginx;
          index index.html;
        }
        location ~/image1/.+\.(jpeg|jpg) {
          types {
            image/jpeg;
          }
                            root /var/www/html;
          image_filter rotate 180;
        }				 
        location  ~*.mp3 {
          root /var/www/html;
          add_header Content-Disposition 'attachment; filename=file.mp3';
          default_type application/octet-stream;
          autoindex on;
        }
        location /secondserver/ {
          proxy_pass http://www.google.com/mail/;
          proxy_buffering off;
          #proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-Host $host;
          #proxy_set_header X-Forwarded-Port $server_port;
        }
        

        location /image1 {
          root /var/www/html;
          autoindex on;
        }
        location /image2 {
          root /var/www/html;
          autoindex on;
        }

        location /redblue {
        proxy_pass https://backend/loadbalancer/;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        #proxy_set_header X-Forwarded-Port $server_port;
        }
      }

      server {
        listen 8080 ;
        location /apache/ {
            proxy_pass http://trainee4.com;
            proxy_buffering off;
                    }
      }
      
      server {
        listen 8081 ssl;
        server_name www.trainee4.com;
        ssl_certificate /etc/letsencrypt/live/trainee4.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/trainee4.com/privkey.pem;
        location /loadbalancer/ {
          root /var/www/html/server1;
          autoindex on;
          index red.html;
        }
      }
      server {
        listen 8082 ssl;
        server_name trainee4.com;
        ssl_certificate /etc/letsencrypt/live/trainee4.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/trainee4.com/privkey.pem;
        location /loadbalancer/ {
            root /var/www/html/server2;
            autoindex on;
            index blue.html;
        }
      }

      sendfile on;
      tcp_nopush on;
      types_hash_max_size 2048;

      include /etc/nginx/mime.types;
      default_type application/octet-stream;


      ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
      ssl_prefer_server_ciphers on;


      access_log /var/log/nginx/access.log;

      

      gzip on;

  
    }


   